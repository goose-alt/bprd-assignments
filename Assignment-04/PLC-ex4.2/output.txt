// 1

- let e1 = fromString "let sum n = if 0<n then n + sum (n-1) else n in sum 1000 end";;
val e1: Absyn.expr =
  Letfun
    ("sum", "n",
     If
       (Prim ("<", CstI 0, Var "n"),
        Prim ("+", Var "n", Call (Var "sum", Prim ("-", Var "n", CstI 1))),
        Var "n"), Call (Var "sum", CstI 1000))

> run e1;;                                                                            
val it: int = 500500


//2

- let e2 = fromString "let power n = if 0<n then 3 * power (n-1) else 1 in power 8 end";;
val e2: Absyn.expr =
  Letfun
    ("power", "n",
     If
       (Prim ("<", CstI 0, Var "n"),
        Prim ("*", CstI 3, Call (Var "power", Prim ("-", Var "n", CstI 1))),
        CstI 1), Call (Var "power", CstI 8))

> run e2;;
val it: int = 6561

//3

- let e3 = fromString "let power x = if 0 < x then 3 * power (x-1) else 1 in let plus n = if 0<n then power n + plus (n-1) else 1 in plus 6 end end";;
val e3: Absyn.expr =
  Letfun
    ("power", "x",
     If
       (Prim ("<", CstI 0, Var "x"),
        Prim ("*", CstI 3, Call (Var "power", Prim ("-", Var "x", CstI 1))),
        CstI 1),
     Letfun
       ("plus", "n",
        If
          (Prim ("<", CstI 0, Var "n"),
           Prim
             ("+", Call (Var "power", Var "n"),
              Call (Var "plus", Prim ("-", Var "n", CstI 1))), CstI 1),
        Call (Var "plus", CstI 6)))

> run e3;;
val it: int = 1093

//4

let e4 = fromString "let power x n = if 0 < n then x * power (n-1) else 1 in (let plus m = if 0<m then (power m 8) + plus (m-1) else 0) in plus 10 end end";;